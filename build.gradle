buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "gradle.plugin.com.github.johnrengelman:shadow:latest.release"
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
        classpath 'net.researchgate:gradle-release:2.8.1'
    }
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: "com.jfrog.artifactory"
apply plugin: 'net.researchgate.release'

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'net.researchgate.release'

    group = 'com.coinbase.exchange'
    description = 'Client for the Coinbase Pro API'
    version = '0.11.0'

    repositories {
        maven {
            url project.property('ARTIFACTORY_GRADLE_MIRROR_URL')
            credentials {
                username = project.property('ARTIFACTORY_GRADLE_USER')
                password = project.property('ARTIFACTORY_GRADLE_PWD')
            }
        }
    }

    test {
        exclude '**/*IntegrationTest*'
    }

    /**
     * User can run these as optional against the sandbox api exchange
     **/
    task integrationTest(type: Test) {
        include '**/*IntegrationTest*'
    }
}

subprojects { }

// apply dependency constraints to all java modules
configure(subprojects.findAll { true }) {

    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    dependencies {
        constraints {
            implementation 'com.fasterxml.jackson.core:jackson-core:2.11.0'
            implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
            implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
            implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.0'
            implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.0'
            implementation 'org.slf4j:slf4j-api:1.7.28'
            implementation 'ch.qos.logback:logback-classic:1.2.3'
            implementation 'ch.qos.logback:logback-core:1.2.3'
            implementation 'org.springframework.boot:spring-boot-starter-web:2.2.7.RELEASE'
            implementation 'org.springframework:spring-context:5.2.6.RELEASE'

            // --------------------------------------
            testImplementation 'junit:junit:4.12'
            testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
            testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
            testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
            testImplementation 'org.junit.platform:junit-platform-suite-api:1.3.2'

            testImplementation 'org.springframework.boot:spring-boot-test:2.2.7.RELEASE'
            testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.7.RELEASE'

            testImplementation 'org.mockito:mockito-core:3.0.0'
            testImplementation 'org.mockito:mockito-junit-jupiter:3.0.0'

            testImplementation 'org.assertj:assertj-core:3.13.2'
        }
    }
}

dependencies {
    implementation project(":api")
    implementation project(":model")
    implementation project(":security")
    implementation project(":websocketfeed")
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

artifactory {
    contextUrl = project.property('ARTIFACTORY_GRADLE_URL')
    publish {
        repository {
            repoKey = project.property('ARTIFACTORY_GRADLE_SNAPSHOTS_REPO') // The Artifactory repository key to publish to
            username = project.property('ARTIFACTORY_GRADLE_USER')// The publisher user name
            password = project.property('ARTIFACTORY_GRADLE_PWD') // The publisher password
        }
        defaults {
            // Reference to Gradle publications defined in the build script.
            // This is how we tell the Artifactory Plugin which artifacts should be
            // published to Artifactory.
            publications('mavenJava')
            publishArtifacts = true
            // Properties to be attached to the published artifacts.
            properties = ['qa.level': 'basic', 'dev.team' : 'core']
            // Publish generated POM files to Artifactory (true by default)
            publishPom = true
        }
    }
}

release {
    git {
        requireBranch = '(master|\\d+\\.\\d+)'
    }
}
